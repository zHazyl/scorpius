version: '3.8'

volumes:
  mongo_chat:
    name: chat_messages_service_vol
    driver: local
  rabbitmq:
    name: rabbitmq_vol
    driver: local
  keycloak-and-mysql-volume:

networks:
  spring-chat-net:
    driver: bridge

services:
  config-server:
    container_name: config-server
    image: zhazy/config-server:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILE}
      CONFIG_SERVER_SECRET: ${CONFIG_SERVER_SECRET}
      GIT_BRANCH: ${REPO_BRANCH}
      GIT_URI: ${GIT_REPO_URI}
#      HOST_KEY: ${KNOWN_HOST_KEY}
#      PRIVATE_KEY: ${PEM}
    ports:
      - 8888:8888
    networks:
      - spring-chat-net
  eureka-server:
    container_name: eureka-server
    image: zhazy/eureka-server:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILE}
      CLOUD_CONFIG_URI: ${CONFIG_SERVER_URI}
    ports:
      - 8761:8761
    networks:
      - spring-chat-net
  cloud-gateway:
    container_name: cloud-gateway
    image: zhazy/cloud-gateway:0.0.1-SNAPSHOT
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILE}
      CLOUD_CONFIG_URI: ${CONFIG_SERVER_URI}
    ports:
      - 8080:8080
    networks:
      - spring-chat-net
  scorpio-fe:
    container_name: scorpio-fe
    image: zhazy/scorpius-fe:0.0.14-SNAPSHOT
    ports:
      - 2130:80
    networks:
      - spring-chat-net
  auth-service:
    container_name: auth-service
    image: zhazy/auth-service:0.0.5-SNAPSHOT
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILE}
      CLOUD_CONFIG_URI: ${CONFIG_SERVER_URI}
    networks:
      - spring-chat-net
  messages-websocket-service:
    container_name: messages-websocket-service
    image: zhazy/messages-websocket-service:0.0.2-SNAPSHOT
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILE}
      CLOUD_CONFIG_URI: ${CONFIG_SERVER_URI}
    networks:
      - spring-chat-net
  chat-messages-service:
    container_name: chat-messages-service
    image: zhazy/chat-messages-service:0.0.5-SNAPSHOT
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILE}
      CLOUD_CONFIG_URI: ${CONFIG_SERVER_URI}
    networks:
      - spring-chat-net
  chat-service:
    container_name: chat-service
    image: zhazy/chat-service:0.0.6-SNAPSHOT
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: ${PROFILE}
      CLOUD_CONFIG_URI: ${CONFIG_SERVER_URI}
    networks:
      - spring-chat-net
  keycloak:
    image: jboss/keycloak:16.1.0
    command: ["-Djboss.http.port=8180"]
    ports:
      - 8180:8180
    restart: unless-stopped
    environment:
      # User and password for the Administration Console
      KEYCLOAK_USER: admin
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json -Dkeycloak.profile.feature.upload_scripts=enabled
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: mysql
      DB_ADDR: mysql-kc
      DB_PORT: 3366
      # Same values as the mysql-kc service
      DB_USER: keycloak_user
      DB_PASSWORD: keycloak_password
      DB_DATABASE: keycloak_db
    volumes:
      - ./imports:/opt/jboss/keycloak/imports
    depends_on:
      - mysql-kc
    networks:
      - spring-chat-net
#DATABASES
  messages_db:
    container_name: chat-messages-service-mongo
    image: library/mongo:latest
    environment:
      MONGO_INITDB_DATABASE: chat_messages_service_database
      MONGO_INITDB_ROOT_USERNAME: ${CHAT_MESSAGES_SERVICE_ROOT_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${CHAT_MESSAGES_SERVICE_ROOT_MONGO_PASS}
    ports:
      - 27017:27017
    volumes:
      - mongo_chat:/var/lib/mongo
      - ./init-chat-messages-service-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - spring-chat-net
  mysql-kc:
    image: mysql:8.0.22
    ports:
      - 3366:3366
    restart: unless-stopped
    environment:
      # The user, password and database that Keycloak
      # is going to create and use
      MYSQL_USER: keycloak_user
      MYSQL_PASSWORD: keycloak_password
      MYSQL_DATABASE: keycloak_db
      MYSQL_TCP_PORT: 3366
      # Self-Explanatory
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - keycloak-and-mysql-volume:/var/lib/mysql
    networks:
      - spring-chat-net
#RABBIT
  rabbitmq:
    container_name: rabbitmq-service
    image: rabbitmq:3-management
    hostname: rabbitmq-service
    command: sh -c "rabbitmq-plugins enable rabbitmq_stomp; rabbitmq-server"
    networks:
      - spring-chat-net
    ports:
      - 5672:5672
      - 15672:15672
      - 61613:61613
    volumes:
      - rabbitmq:/etc/rabbitmq/
      - rabbitmq:/var/lib/rabbitmq/
      - rabbitmq:/var/log/rabbitmq/
      - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
